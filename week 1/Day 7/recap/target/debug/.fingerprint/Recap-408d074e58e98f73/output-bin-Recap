{"message":"`and` is not a logical operator","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":379,"byte_end":382,"line_start":22,"line_end":22,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    if age >0 and  age < 18 {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `&&` to perform logical conjunction","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":379,"byte_end":382,"line_start":22,"line_end":22,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    if age >0 and  age < 18 {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":"&&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `and` is not a logical operator\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:22:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if age >0 and  age < 18 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: use `&&` to perform logical conjunction\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\u001b[0m\n\n"}
{"message":"`and` is not a logical operator","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":478,"byte_end":481,"line_start":26,"line_end":26,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"    else  if age >= 18 and age < 120{","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `&&` to perform logical conjunction","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":478,"byte_end":481,"line_start":26,"line_end":26,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"    else  if age >= 18 and age < 120{","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":"&&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `and` is not a logical operator\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:26:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    else  if age >= 18 and age < 120{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: use `&&` to perform logical conjunction\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors\u001b[0m\n\n"}
